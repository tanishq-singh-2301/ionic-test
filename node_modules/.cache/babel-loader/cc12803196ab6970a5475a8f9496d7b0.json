{"ast":null,"code":"import _regeneratorRuntime from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\n\nfunction copyResponse(_x, _x2) {\n  return _copyResponse.apply(this, arguments);\n}\n\nfunction _copyResponse() {\n  _copyResponse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(response, modifier) {\n    var clonedResponse, responseInit, modifiedResponseInit, body;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            clonedResponse = response.clone(); // Create a fresh `ResponseInit` object by cloning the headers.\n\n            responseInit = {\n              headers: new Headers(clonedResponse.headers),\n              status: clonedResponse.status,\n              statusText: clonedResponse.statusText\n            }; // Apply any user modifications.\n\n            modifiedResponseInit = modifier ? modifier(responseInit) : responseInit; // Create the new response from the body stream and `ResponseInit`\n            // modifications. Note: not all browsers support the Response.body stream,\n            // so fall back to reading the entire body into memory as a blob.\n\n            if (!canConstructResponseFromBodyStream()) {\n              _context.next = 7;\n              break;\n            }\n\n            _context.t0 = clonedResponse.body;\n            _context.next = 10;\n            break;\n\n          case 7:\n            _context.next = 9;\n            return clonedResponse.blob();\n\n          case 9:\n            _context.t0 = _context.sent;\n\n          case 10:\n            body = _context.t0;\n            return _context.abrupt(\"return\", new Response(body, modifiedResponseInit));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _copyResponse.apply(this, arguments);\n}\n\nexport { copyResponse };","map":{"version":3,"names":["canConstructResponseFromBodyStream","copyResponse","response","modifier","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","body","blob","Response"],"sources":["/home/tanishq-singh-2301/hello/node_modules/workbox-core/copyResponse.js"],"sourcesContent":["/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,kCAAT,QAAmD,kDAAnD;AACA,OAAO,eAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;SACeC,Y;;;;;6EAAf,iBAA4BC,QAA5B,EAAsCC,QAAtC;IAAA;IAAA;MAAA;QAAA;UAAA;YACUC,cADV,GAC2BF,QAAQ,CAACG,KAAT,EAD3B,EAEI;;YACMC,YAHV,GAGyB;cACjBC,OAAO,EAAE,IAAIC,OAAJ,CAAYJ,cAAc,CAACG,OAA3B,CADQ;cAEjBE,MAAM,EAAEL,cAAc,CAACK,MAFN;cAGjBC,UAAU,EAAEN,cAAc,CAACM;YAHV,CAHzB,EAQI;;YACMC,oBATV,GASiCR,QAAQ,GAAGA,QAAQ,CAACG,YAAD,CAAX,GAA4BA,YATrE,EAUI;YACA;YACA;;YAZJ,KAaiBN,kCAAkC,EAbnD;cAAA;cAAA;YAAA;;YAAA,cAcQI,cAAc,CAACQ,IAdvB;YAAA;YAAA;;UAAA;YAAA;YAAA,OAcoCR,cAAc,CAACS,IAAf,EAdpC;;UAAA;YAAA;;UAAA;YAaUD,IAbV;YAAA,iCAeW,IAAIE,QAAJ,CAAaF,IAAb,EAAmBD,oBAAnB,CAfX;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,C;;;;AAiBA,SAASV,YAAT"},"metadata":{},"sourceType":"module"}