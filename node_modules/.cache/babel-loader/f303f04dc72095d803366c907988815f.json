{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nvar KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nvar KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nvar KEYBOARD_THRESHOLD = 150;\nvar previousVisualViewport = {};\nvar currentVisualViewport = {};\nvar keyboardOpen = false;\n/**\n * This is only used for tests\n */\n\nvar resetKeyboardAssist = function resetKeyboardAssist() {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\n\nvar startKeyboardAssist = function startKeyboardAssist(win) {\n  startNativeListeners(win);\n\n  if (!win.visualViewport) {\n    return;\n  }\n\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n\n  win.visualViewport.onresize = function () {\n    trackViewportChanges(win);\n\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    } else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\n\n\nvar startNativeListeners = function startNativeListeners(win) {\n  win.addEventListener('keyboardDidShow', function (ev) {\n    return setKeyboardOpen(win, ev);\n  });\n  win.addEventListener('keyboardDidHide', function () {\n    return setKeyboardClose(win);\n  });\n};\n\nvar setKeyboardOpen = function setKeyboardOpen(win, ev) {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\n\nvar setKeyboardClose = function setKeyboardClose(win) {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\n\n\nvar keyboardDidOpen = function keyboardDidOpen() {\n  var scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return !keyboardOpen && previousVisualViewport.width === currentVisualViewport.width && scaledHeightDifference > KEYBOARD_THRESHOLD;\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\n\n\nvar keyboardDidResize = function keyboardDidResize(win) {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\n\n\nvar keyboardDidClose = function keyboardDidClose(win) {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\n\n\nvar fireKeyboardOpenEvent = function fireKeyboardOpenEvent(win, nativeEv) {\n  var keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  var ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: {\n      keyboardHeight: keyboardHeight\n    }\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\n\n\nvar fireKeyboardCloseEvent = function fireKeyboardCloseEvent(win) {\n  var ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\n\n\nvar trackViewportChanges = function trackViewportChanges(win) {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\n\n\nvar copyVisualViewport = function copyVisualViewport(visualViewport) {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale\n  };\n};\n\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };","map":{"version":3,"names":["KEYBOARD_DID_OPEN","KEYBOARD_DID_CLOSE","KEYBOARD_THRESHOLD","previousVisualViewport","currentVisualViewport","keyboardOpen","resetKeyboardAssist","startKeyboardAssist","win","startNativeListeners","visualViewport","copyVisualViewport","onresize","trackViewportChanges","keyboardDidOpen","keyboardDidResize","setKeyboardOpen","keyboardDidClose","setKeyboardClose","addEventListener","ev","fireKeyboardOpenEvent","fireKeyboardCloseEvent","scaledHeightDifference","height","scale","width","innerHeight","nativeEv","keyboardHeight","CustomEvent","detail","dispatchEvent","Object","assign","Math","round","offsetTop","offsetLeft","pageTop","pageLeft"],"sources":["/home/tanishq-singh-2301/hello/node_modules/@ionic/core/components/keyboard.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst KEYBOARD_DID_OPEN = 'ionKeyboardDidShow';\nconst KEYBOARD_DID_CLOSE = 'ionKeyboardDidHide';\nconst KEYBOARD_THRESHOLD = 150;\nlet previousVisualViewport = {};\nlet currentVisualViewport = {};\nlet keyboardOpen = false;\n/**\n * This is only used for tests\n */\nconst resetKeyboardAssist = () => {\n  previousVisualViewport = {};\n  currentVisualViewport = {};\n  keyboardOpen = false;\n};\nconst startKeyboardAssist = (win) => {\n  startNativeListeners(win);\n  if (!win.visualViewport) {\n    return;\n  }\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n  win.visualViewport.onresize = () => {\n    trackViewportChanges(win);\n    if (keyboardDidOpen() || keyboardDidResize(win)) {\n      setKeyboardOpen(win);\n    }\n    else if (keyboardDidClose(win)) {\n      setKeyboardClose(win);\n    }\n  };\n};\n/**\n * Listen for events fired by native keyboard plugin\n * in Capacitor/Cordova so devs only need to listen\n * in one place.\n */\nconst startNativeListeners = (win) => {\n  win.addEventListener('keyboardDidShow', (ev) => setKeyboardOpen(win, ev));\n  win.addEventListener('keyboardDidHide', () => setKeyboardClose(win));\n};\nconst setKeyboardOpen = (win, ev) => {\n  fireKeyboardOpenEvent(win, ev);\n  keyboardOpen = true;\n};\nconst setKeyboardClose = (win) => {\n  fireKeyboardCloseEvent(win);\n  keyboardOpen = false;\n};\n/**\n * Returns `true` if the `keyboardOpen` flag is not\n * set, the previous visual viewport width equal the current\n * visual viewport width, and if the scaled difference\n * of the previous visual viewport height minus the current\n * visual viewport height is greater than KEYBOARD_THRESHOLD\n *\n * We need to be able to accommodate users who have zooming\n * enabled in their browser (or have zoomed in manually) which\n * is why we take into account the current visual viewport's\n * scale value.\n */\nconst keyboardDidOpen = () => {\n  const scaledHeightDifference = (previousVisualViewport.height - currentVisualViewport.height) * currentVisualViewport.scale;\n  return (!keyboardOpen &&\n    previousVisualViewport.width === currentVisualViewport.width &&\n    scaledHeightDifference > KEYBOARD_THRESHOLD);\n};\n/**\n * Returns `true` if the keyboard is open,\n * but the keyboard did not close\n */\nconst keyboardDidResize = (win) => {\n  return keyboardOpen && !keyboardDidClose(win);\n};\n/**\n * Determine if the keyboard was closed\n * Returns `true` if the `keyboardOpen` flag is set and\n * the current visual viewport height equals the\n * layout viewport height.\n */\nconst keyboardDidClose = (win) => {\n  return keyboardOpen && currentVisualViewport.height === win.innerHeight;\n};\n/**\n * Dispatch a keyboard open event\n */\nconst fireKeyboardOpenEvent = (win, nativeEv) => {\n  const keyboardHeight = nativeEv ? nativeEv.keyboardHeight : win.innerHeight - currentVisualViewport.height;\n  const ev = new CustomEvent(KEYBOARD_DID_OPEN, {\n    detail: { keyboardHeight },\n  });\n  win.dispatchEvent(ev);\n};\n/**\n * Dispatch a keyboard close event\n */\nconst fireKeyboardCloseEvent = (win) => {\n  const ev = new CustomEvent(KEYBOARD_DID_CLOSE);\n  win.dispatchEvent(ev);\n};\n/**\n * Given a window object, create a copy of\n * the current visual and layout viewport states\n * while also preserving the previous visual and\n * layout viewport states\n */\nconst trackViewportChanges = (win) => {\n  previousVisualViewport = Object.assign({}, currentVisualViewport);\n  currentVisualViewport = copyVisualViewport(win.visualViewport);\n};\n/**\n * Creates a deep copy of the visual viewport\n * at a given state\n */\nconst copyVisualViewport = (visualViewport) => {\n  return {\n    width: Math.round(visualViewport.width),\n    height: Math.round(visualViewport.height),\n    offsetTop: visualViewport.offsetTop,\n    offsetLeft: visualViewport.offsetLeft,\n    pageTop: visualViewport.pageTop,\n    pageLeft: visualViewport.pageLeft,\n    scale: visualViewport.scale,\n  };\n};\n\nexport { KEYBOARD_DID_CLOSE, KEYBOARD_DID_OPEN, copyVisualViewport, keyboardDidClose, keyboardDidOpen, keyboardDidResize, resetKeyboardAssist, setKeyboardClose, setKeyboardOpen, startKeyboardAssist, trackViewportChanges };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}