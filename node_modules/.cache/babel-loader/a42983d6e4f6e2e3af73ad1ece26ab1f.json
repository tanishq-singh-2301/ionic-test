{"ast":null,"code":"import _defineProperty from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _regeneratorRuntime from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { q as pointerCoord } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\nvar segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\nvar segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\nvar Segment = /*@__PURE__*/proxyCustomElement( /*#__PURE__*/function (_HTMLElement) {\n  _inherits(_class, _HTMLElement);\n\n  var _super = _createSuper(_class);\n\n  function _class() {\n    var _this;\n\n    _classCallCheck(this, _class);\n\n    _this = _super.call(this);\n\n    _this.__registerHost();\n\n    _this.__attachShadow();\n\n    _this.ionChange = createEvent(_assertThisInitialized(_this), \"ionChange\", 7);\n    _this.ionSelect = createEvent(_assertThisInitialized(_this), \"ionSelect\", 7);\n    _this.ionStyle = createEvent(_assertThisInitialized(_this), \"ionStyle\", 7);\n    _this.didInit = false;\n    _this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n\n    _this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n\n    _this.scrollable = false;\n    /**\n     * If `true`, users will be able to swipe between segment buttons to activate them.\n     */\n\n    _this.swipeGesture = true;\n    /**\n     * If `true`, navigating to an `ion-segment-button` with the keyboard will focus and select the element.\n     * If `false`, keyboard navigation will only focus the `ion-segment-button` element.\n     */\n\n    _this.selectOnFocus = false;\n\n    _this.onClick = function (ev) {\n      var current = ev.target;\n      var previous = _this.checked; // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n\n      _this.value = current.value;\n\n      if (_this.scrollable || !_this.swipeGesture) {\n        if (previous) {\n          _this.checkButton(previous, current);\n        } else {\n          _this.setCheckedClasses();\n        }\n      }\n\n      _this.checked = current;\n    };\n\n    _this.getSegmentButton = function (selector) {\n      var buttons = _this.getButtons().filter(function (button) {\n        return !button.disabled;\n      });\n\n      var currIndex = buttons.findIndex(function (button) {\n        return button === document.activeElement;\n      });\n\n      switch (selector) {\n        case 'first':\n          return buttons[0];\n\n        case 'last':\n          return buttons[buttons.length - 1];\n\n        case 'next':\n          return buttons[currIndex + 1] || buttons[0];\n\n        case 'previous':\n          return buttons[currIndex - 1] || buttons[buttons.length - 1];\n\n        default:\n          return null;\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(_class, [{\n    key: \"colorChanged\",\n    value: function colorChanged(value, oldValue) {\n      /**\n       * If color is set after not having\n       * previously been set (or vice versa),\n       * we need to emit style so the segment-buttons\n       * can apply their color classes properly.\n       */\n      if (oldValue === undefined && value !== undefined || oldValue !== undefined && value === undefined) {\n        this.emitStyle();\n      }\n    }\n  }, {\n    key: \"swipeGestureChanged\",\n    value: function swipeGestureChanged() {\n      this.gestureChanged();\n    }\n  }, {\n    key: \"valueChanged\",\n    value: function valueChanged(value, oldValue) {\n      this.ionSelect.emit({\n        value: value\n      });\n\n      if (oldValue !== '' || this.didInit) {\n        if (!this.activated) {\n          this.ionChange.emit({\n            value: value\n          });\n        } else {\n          this.valueAfterGesture = value;\n        }\n      }\n    }\n  }, {\n    key: \"disabledChanged\",\n    value: function disabledChanged() {\n      this.gestureChanged();\n      var buttons = this.getButtons();\n\n      var _iterator = _createForOfIteratorHelper(buttons),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var button = _step.value;\n          button.disabled = this.disabled;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"gestureChanged\",\n    value: function gestureChanged() {\n      if (this.gesture) {\n        this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n      }\n    }\n  }, {\n    key: \"connectedCallback\",\n    value: function connectedCallback() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentWillLoad\",\n    value: function componentWillLoad() {\n      this.emitStyle();\n    }\n  }, {\n    key: \"componentDidLoad\",\n    value: function () {\n      var _componentDidLoad = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.setCheckedClasses();\n                this.ensureFocusable();\n                _context.next = 4;\n                return import('./index2.js');\n\n              case 4:\n                this.gesture = _context.sent.createGesture({\n                  el: this.el,\n                  gestureName: 'segment',\n                  gesturePriority: 100,\n                  threshold: 0,\n                  passive: false,\n                  onStart: function onStart(ev) {\n                    return _this2.onStart(ev);\n                  },\n                  onMove: function onMove(ev) {\n                    return _this2.onMove(ev);\n                  },\n                  onEnd: function onEnd(ev) {\n                    return _this2.onEnd(ev);\n                  }\n                });\n                this.gestureChanged();\n\n                if (this.disabled) {\n                  this.disabledChanged();\n                }\n\n                this.didInit = true;\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidLoad() {\n        return _componentDidLoad.apply(this, arguments);\n      }\n\n      return componentDidLoad;\n    }()\n  }, {\n    key: \"onStart\",\n    value: function onStart(detail) {\n      this.activate(detail);\n    }\n  }, {\n    key: \"onMove\",\n    value: function onMove(detail) {\n      this.setNextIndex(detail);\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd(detail) {\n      this.setActivated(false);\n      var checkedValidButton = this.setNextIndex(detail, true);\n      detail.event.stopImmediatePropagation();\n\n      if (checkedValidButton) {\n        this.addRipple(detail);\n      }\n\n      var value = this.valueAfterGesture;\n\n      if (value !== undefined) {\n        this.ionChange.emit({\n          value: value\n        });\n        this.valueAfterGesture = undefined;\n      }\n    }\n  }, {\n    key: \"getButtons\",\n    value: function getButtons() {\n      return Array.from(this.el.querySelectorAll('ion-segment-button'));\n    }\n    /**\n     * The gesture blocks the segment button ripple. This\n     * function adds the ripple based on the checked segment\n     * and where the cursor ended.\n     */\n\n  }, {\n    key: \"addRipple\",\n    value: function addRipple(detail) {\n      var _this3 = this;\n\n      var useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n\n      if (!useRippleEffect) {\n        return;\n      }\n\n      var buttons = this.getButtons();\n      var checked = buttons.find(function (button) {\n        return button.value === _this3.value;\n      });\n      var root = checked.shadowRoot || checked;\n      var ripple = root.querySelector('ion-ripple-effect');\n\n      if (!ripple) {\n        return;\n      }\n\n      var _pointerCoord = pointerCoord(detail.event),\n          x = _pointerCoord.x,\n          y = _pointerCoord.y;\n\n      ripple.addRipple(x, y).then(function (remove) {\n        return remove();\n      });\n    }\n    /*\n     * Activate both the segment and the buttons\n     * due to a bug with ::slotted in Safari\n     */\n\n  }, {\n    key: \"setActivated\",\n    value: function setActivated(activated) {\n      var buttons = this.getButtons();\n      buttons.forEach(function (button) {\n        if (activated) {\n          button.classList.add('segment-button-activated');\n        } else {\n          button.classList.remove('segment-button-activated');\n        }\n      });\n      this.activated = activated;\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(detail) {\n      var _this4 = this;\n\n      var clicked = detail.event.target;\n      var buttons = this.getButtons();\n      var checked = buttons.find(function (button) {\n        return button.value === _this4.value;\n      }); // Make sure we are only checking for activation on a segment button\n      // since disabled buttons will get the click on the segment\n\n      if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n        return;\n      } // If there are no checked buttons, set the current button to checked\n\n\n      if (!checked) {\n        this.value = clicked.value;\n        this.setCheckedClasses();\n      } // If the gesture began on the clicked button with the indicator\n      // then we should activate the indicator\n\n\n      if (this.value === clicked.value) {\n        this.setActivated(true);\n      }\n    }\n  }, {\n    key: \"getIndicator\",\n    value: function getIndicator(button) {\n      var root = button.shadowRoot || button;\n      return root.querySelector('.segment-button-indicator');\n    }\n  }, {\n    key: \"checkButton\",\n    value: function checkButton(previous, current) {\n      var previousIndicator = this.getIndicator(previous);\n      var currentIndicator = this.getIndicator(current);\n\n      if (previousIndicator === null || currentIndicator === null) {\n        return;\n      }\n\n      var previousClientRect = previousIndicator.getBoundingClientRect();\n      var currentClientRect = currentIndicator.getBoundingClientRect();\n      var widthDelta = previousClientRect.width / currentClientRect.width;\n      var xPosition = previousClientRect.left - currentClientRect.left; // Scale the indicator width to match the previous indicator width\n      // and translate it on top of the previous indicator\n\n      var transform = \"translate3d(\".concat(xPosition, \"px, 0, 0) scaleX(\").concat(widthDelta, \")\");\n      writeTask(function () {\n        // Remove the transition before positioning on top of the previous indicator\n        currentIndicator.classList.remove('segment-button-indicator-animated');\n        currentIndicator.style.setProperty('transform', transform); // Force a repaint to ensure the transform happens\n\n        currentIndicator.getBoundingClientRect(); // Add the transition to move the indicator into place\n\n        currentIndicator.classList.add('segment-button-indicator-animated'); // Remove the transform to slide the indicator back to the button clicked\n\n        currentIndicator.style.setProperty('transform', '');\n      });\n      this.value = current.value;\n      this.setCheckedClasses();\n    }\n  }, {\n    key: \"setCheckedClasses\",\n    value: function setCheckedClasses() {\n      var _this5 = this;\n\n      var buttons = this.getButtons();\n      var index = buttons.findIndex(function (button) {\n        return button.value === _this5.value;\n      });\n      var next = index + 1; // Keep track of the currently checked button\n\n      this.checked = buttons.find(function (button) {\n        return button.value === _this5.value;\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(buttons),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var button = _step2.value;\n          button.classList.remove('segment-button-after-checked');\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (next < buttons.length) {\n        buttons[next].classList.add('segment-button-after-checked');\n      }\n    }\n  }, {\n    key: \"setNextIndex\",\n    value: function setNextIndex(detail) {\n      var _this6 = this;\n\n      var isEnd = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var rtl = isRTL(this.el);\n      var activated = this.activated;\n      var buttons = this.getButtons();\n      var index = buttons.findIndex(function (button) {\n        return button.value === _this6.value;\n      });\n      var previous = buttons[index];\n      var current;\n      var nextIndex;\n\n      if (index === -1) {\n        return;\n      } // Get the element that the touch event started on in case\n      // it was the checked button, then we will move the indicator\n\n\n      var rect = previous.getBoundingClientRect();\n      var left = rect.left;\n      var width = rect.width; // Get the element that the gesture is on top of based on the currentX of the\n      // gesture event and the Y coordinate of the starting element, since the gesture\n      // can move up and down off of the segment\n\n      var currentX = detail.currentX;\n      var previousY = rect.top + rect.height / 2;\n      /**\n       * Segment can be used inside the shadow dom\n       * so doing document.elementFromPoint would never\n       * return a segment button in that instance.\n       * We use getRootNode to which will return the parent\n       * shadow root if used inside a shadow component and\n       * returns document otherwise.\n       */\n\n      var root = this.el.getRootNode();\n      var nextEl = root.elementFromPoint(currentX, previousY);\n      var decreaseIndex = rtl ? currentX > left + width : currentX < left;\n      var increaseIndex = rtl ? currentX < left : currentX > left + width; // If the indicator is currently activated then we have started the gesture\n      // on top of the checked button so we need to slide the indicator\n      // by checking the button next to it as we move\n\n      if (activated && !isEnd) {\n        // Decrease index, move left in LTR & right in RTL\n        if (decreaseIndex) {\n          var newIndex = index - 1;\n\n          if (newIndex >= 0) {\n            nextIndex = newIndex;\n          } // Increase index, moves right in LTR & left in RTL\n\n        } else if (increaseIndex) {\n          if (activated && !isEnd) {\n            var _newIndex = index + 1;\n\n            if (_newIndex < buttons.length) {\n              nextIndex = _newIndex;\n            }\n          }\n        }\n\n        if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n          current = buttons[nextIndex];\n        }\n      } // If the indicator is not activated then we will just set the indicator\n      // to the element where the gesture ended\n\n\n      if (!activated && isEnd) {\n        current = nextEl;\n      }\n\n      if (current != null) {\n        /**\n         * If current element is ion-segment then that means\n         * user tried to select a disabled ion-segment-button,\n         * and we should not update the ripple.\n         */\n        if (current.tagName === 'ION-SEGMENT') {\n          return false;\n        }\n\n        if (previous !== current) {\n          this.checkButton(previous, current);\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"emitStyle\",\n    value: function emitStyle() {\n      this.ionStyle.emit({\n        segment: true\n      });\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(ev) {\n      var rtl = isRTL(this.el);\n      var keyDownSelectsButton = this.selectOnFocus;\n      var current;\n\n      switch (ev.key) {\n        case 'ArrowRight':\n          ev.preventDefault();\n          current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\n          break;\n\n        case 'ArrowLeft':\n          ev.preventDefault();\n          current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\n          break;\n\n        case 'Home':\n          ev.preventDefault();\n          current = this.getSegmentButton('first');\n          break;\n\n        case 'End':\n          ev.preventDefault();\n          current = this.getSegmentButton('last');\n          break;\n\n        case ' ':\n        case 'Enter':\n          ev.preventDefault();\n          current = document.activeElement;\n          keyDownSelectsButton = true;\n      }\n\n      if (!current) {\n        return;\n      }\n\n      if (keyDownSelectsButton) {\n        var previous = this.checked || current;\n        this.checkButton(previous, current);\n      }\n\n      current.focus();\n    }\n    /* By default, focus is delegated to the selected `ion-segment-button`.\n     * If there is no selected button, focus will instead pass to the first child button.\n     **/\n\n  }, {\n    key: \"ensureFocusable\",\n    value: function ensureFocusable() {\n      var _a;\n\n      if (this.value !== undefined) {\n        return;\n      }\n\n      var buttons = this.getButtons();\n      (_a = buttons[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('tabindex', '0');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _createColorClasses;\n\n      var mode = getIonMode(this);\n      return h(Host, {\n        role: \"tablist\",\n        onClick: this.onClick,\n        class: createColorClasses(this.color, (_createColorClasses = {}, _defineProperty(_createColorClasses, mode, true), _defineProperty(_createColorClasses, 'in-toolbar', hostContext('ion-toolbar', this.el)), _defineProperty(_createColorClasses, 'in-toolbar-color', hostContext('ion-toolbar[color]', this.el)), _defineProperty(_createColorClasses, 'segment-activated', this.activated), _defineProperty(_createColorClasses, 'segment-disabled', this.disabled), _defineProperty(_createColorClasses, 'segment-scrollable', this.scrollable), _createColorClasses))\n      }, h(\"slot\", null));\n    }\n  }, {\n    key: \"el\",\n    get: function get() {\n      return this;\n    }\n  }], [{\n    key: \"watchers\",\n    get: function get() {\n      return {\n        \"color\": [\"colorChanged\"],\n        \"swipeGesture\": [\"swipeGestureChanged\"],\n        \"value\": [\"valueChanged\"],\n        \"disabled\": [\"disabledChanged\"]\n      };\n    }\n  }, {\n    key: \"style\",\n    get: function get() {\n      return {\n        ios: segmentIosCss,\n        md: segmentMdCss\n      };\n    }\n  }]);\n\n  return _class;\n}(HTMLElement), [33, \"ion-segment\", {\n  \"color\": [513],\n  \"disabled\": [4],\n  \"scrollable\": [4],\n  \"swipeGesture\": [4, \"swipe-gesture\"],\n  \"value\": [1025],\n  \"selectOnFocus\": [4, \"select-on-focus\"],\n  \"activated\": [32]\n}, [[0, \"keydown\", \"onKeyDown\"]]]);\n\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n\n  var components = [\"ion-segment\"];\n  components.forEach(function (tagName) {\n    switch (tagName) {\n      case \"ion-segment\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Segment);\n        }\n\n        break;\n    }\n  });\n}\n\nvar IonSegment = Segment;\nvar defineCustomElement = defineCustomElement$1;\nexport { IonSegment, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","c","config","b","getIonMode","q","pointerCoord","i","isRTL","createColorClasses","hostContext","segmentIosCss","segmentMdCss","Segment","__registerHost","__attachShadow","ionChange","ionSelect","ionStyle","didInit","activated","disabled","scrollable","swipeGesture","selectOnFocus","onClick","ev","current","target","previous","checked","tagName","value","checkButton","setCheckedClasses","getSegmentButton","selector","buttons","getButtons","filter","button","currIndex","findIndex","document","activeElement","length","oldValue","undefined","emitStyle","gestureChanged","emit","valueAfterGesture","gesture","enable","ensureFocusable","createGesture","el","gestureName","gesturePriority","threshold","passive","onStart","onMove","onEnd","disabledChanged","detail","activate","setNextIndex","setActivated","checkedValidButton","event","stopImmediatePropagation","addRipple","Array","from","querySelectorAll","useRippleEffect","getBoolean","find","root","shadowRoot","ripple","querySelector","x","y","then","remove","forEach","classList","add","clicked","previousIndicator","getIndicator","currentIndicator","previousClientRect","getBoundingClientRect","currentClientRect","widthDelta","width","xPosition","left","transform","style","setProperty","index","next","isEnd","rtl","nextIndex","rect","currentX","previousY","top","height","getRootNode","nextEl","elementFromPoint","decreaseIndex","increaseIndex","newIndex","segment","keyDownSelectsButton","key","preventDefault","focus","_a","setAttribute","mode","role","class","color","ios","md","defineCustomElement$1","customElements","components","get","define","IonSegment","defineCustomElement"],"sources":["/home/tanishq-singh-2301/hello/node_modules/@ionic/core/components/ion-segment.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { c as config, b as getIonMode } from './ionic-global.js';\nimport { q as pointerCoord } from './helpers.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses, h as hostContext } from './theme.js';\n\nconst segmentIosCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.065);border-radius:8px;overflow:hidden;z-index:0}:host(.ion-color){background:rgba(var(--ion-color-base-rgb), 0.065)}:host(.in-toolbar){margin-left:auto;margin-right:auto;margin-top:0;margin-bottom:0;width:auto}@supports ((-webkit-margin-start: 0) or (margin-inline-start: 0)) or (-webkit-margin-start: 0){:host(.in-toolbar){margin-left:unset;margin-right:unset;-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto}}:host(.in-toolbar:not(.ion-color)){background:var(--ion-toolbar-segment-background, var(--background))}:host(.in-toolbar-color:not(.ion-color)){background:rgba(var(--ion-color-contrast-rgb), 0.11)}\";\n\nconst segmentMdCss = \":host{--ripple-color:currentColor;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:stretch;align-items:stretch;-ms-flex-pack:center;justify-content:center;width:100%;background:var(--background);font-family:var(--ion-font-family, inherit);text-align:center;contain:paint;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}:host(.segment-scrollable){-ms-flex-pack:start;justify-content:start;width:auto;overflow-x:auto}:host(.segment-scrollable::-webkit-scrollbar){display:none}:host{--background:transparent}:host(.segment-scrollable) ::slotted(ion-segment-button){min-width:auto}\";\n\nconst Segment = /*@__PURE__*/ proxyCustomElement(class extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionSelect = createEvent(this, \"ionSelect\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.didInit = false;\n    this.activated = false;\n    /**\n     * If `true`, the user cannot interact with the segment.\n     */\n    this.disabled = false;\n    /**\n     * If `true`, the segment buttons will overflow and the user can swipe to see them.\n     * In addition, this will disable the gesture to drag the indicator between the buttons\n     * in order to swipe to see hidden buttons.\n     */\n    this.scrollable = false;\n    /**\n     * If `true`, users will be able to swipe between segment buttons to activate them.\n     */\n    this.swipeGesture = true;\n    /**\n     * If `true`, navigating to an `ion-segment-button` with the keyboard will focus and select the element.\n     * If `false`, keyboard navigation will only focus the `ion-segment-button` element.\n     */\n    this.selectOnFocus = false;\n    this.onClick = (ev) => {\n      const current = ev.target;\n      const previous = this.checked;\n      // If the current element is a segment then that means\n      // the user tried to swipe to a segment button and\n      // click a segment button at the same time so we should\n      // not update the checked segment button\n      if (current.tagName === 'ION-SEGMENT') {\n        return;\n      }\n      this.value = current.value;\n      if (this.scrollable || !this.swipeGesture) {\n        if (previous) {\n          this.checkButton(previous, current);\n        }\n        else {\n          this.setCheckedClasses();\n        }\n      }\n      this.checked = current;\n    };\n    this.getSegmentButton = (selector) => {\n      const buttons = this.getButtons().filter((button) => !button.disabled);\n      const currIndex = buttons.findIndex((button) => button === document.activeElement);\n      switch (selector) {\n        case 'first':\n          return buttons[0];\n        case 'last':\n          return buttons[buttons.length - 1];\n        case 'next':\n          return buttons[currIndex + 1] || buttons[0];\n        case 'previous':\n          return buttons[currIndex - 1] || buttons[buttons.length - 1];\n        default:\n          return null;\n      }\n    };\n  }\n  colorChanged(value, oldValue) {\n    /**\n     * If color is set after not having\n     * previously been set (or vice versa),\n     * we need to emit style so the segment-buttons\n     * can apply their color classes properly.\n     */\n    if ((oldValue === undefined && value !== undefined) || (oldValue !== undefined && value === undefined)) {\n      this.emitStyle();\n    }\n  }\n  swipeGestureChanged() {\n    this.gestureChanged();\n  }\n  valueChanged(value, oldValue) {\n    this.ionSelect.emit({ value });\n    if (oldValue !== '' || this.didInit) {\n      if (!this.activated) {\n        this.ionChange.emit({ value });\n      }\n      else {\n        this.valueAfterGesture = value;\n      }\n    }\n  }\n  disabledChanged() {\n    this.gestureChanged();\n    const buttons = this.getButtons();\n    for (const button of buttons) {\n      button.disabled = this.disabled;\n    }\n  }\n  gestureChanged() {\n    if (this.gesture) {\n      this.gesture.enable(!this.scrollable && !this.disabled && this.swipeGesture);\n    }\n  }\n  connectedCallback() {\n    this.emitStyle();\n  }\n  componentWillLoad() {\n    this.emitStyle();\n  }\n  async componentDidLoad() {\n    this.setCheckedClasses();\n    this.ensureFocusable();\n    this.gesture = (await import('./index2.js')).createGesture({\n      el: this.el,\n      gestureName: 'segment',\n      gesturePriority: 100,\n      threshold: 0,\n      passive: false,\n      onStart: (ev) => this.onStart(ev),\n      onMove: (ev) => this.onMove(ev),\n      onEnd: (ev) => this.onEnd(ev),\n    });\n    this.gestureChanged();\n    if (this.disabled) {\n      this.disabledChanged();\n    }\n    this.didInit = true;\n  }\n  onStart(detail) {\n    this.activate(detail);\n  }\n  onMove(detail) {\n    this.setNextIndex(detail);\n  }\n  onEnd(detail) {\n    this.setActivated(false);\n    const checkedValidButton = this.setNextIndex(detail, true);\n    detail.event.stopImmediatePropagation();\n    if (checkedValidButton) {\n      this.addRipple(detail);\n    }\n    const value = this.valueAfterGesture;\n    if (value !== undefined) {\n      this.ionChange.emit({ value });\n      this.valueAfterGesture = undefined;\n    }\n  }\n  getButtons() {\n    return Array.from(this.el.querySelectorAll('ion-segment-button'));\n  }\n  /**\n   * The gesture blocks the segment button ripple. This\n   * function adds the ripple based on the checked segment\n   * and where the cursor ended.\n   */\n  addRipple(detail) {\n    const useRippleEffect = config.getBoolean('animated', true) && config.getBoolean('rippleEffect', true);\n    if (!useRippleEffect) {\n      return;\n    }\n    const buttons = this.getButtons();\n    const checked = buttons.find((button) => button.value === this.value);\n    const root = checked.shadowRoot || checked;\n    const ripple = root.querySelector('ion-ripple-effect');\n    if (!ripple) {\n      return;\n    }\n    const { x, y } = pointerCoord(detail.event);\n    ripple.addRipple(x, y).then((remove) => remove());\n  }\n  /*\n   * Activate both the segment and the buttons\n   * due to a bug with ::slotted in Safari\n   */\n  setActivated(activated) {\n    const buttons = this.getButtons();\n    buttons.forEach((button) => {\n      if (activated) {\n        button.classList.add('segment-button-activated');\n      }\n      else {\n        button.classList.remove('segment-button-activated');\n      }\n    });\n    this.activated = activated;\n  }\n  activate(detail) {\n    const clicked = detail.event.target;\n    const buttons = this.getButtons();\n    const checked = buttons.find((button) => button.value === this.value);\n    // Make sure we are only checking for activation on a segment button\n    // since disabled buttons will get the click on the segment\n    if (clicked.tagName !== 'ION-SEGMENT-BUTTON') {\n      return;\n    }\n    // If there are no checked buttons, set the current button to checked\n    if (!checked) {\n      this.value = clicked.value;\n      this.setCheckedClasses();\n    }\n    // If the gesture began on the clicked button with the indicator\n    // then we should activate the indicator\n    if (this.value === clicked.value) {\n      this.setActivated(true);\n    }\n  }\n  getIndicator(button) {\n    const root = button.shadowRoot || button;\n    return root.querySelector('.segment-button-indicator');\n  }\n  checkButton(previous, current) {\n    const previousIndicator = this.getIndicator(previous);\n    const currentIndicator = this.getIndicator(current);\n    if (previousIndicator === null || currentIndicator === null) {\n      return;\n    }\n    const previousClientRect = previousIndicator.getBoundingClientRect();\n    const currentClientRect = currentIndicator.getBoundingClientRect();\n    const widthDelta = previousClientRect.width / currentClientRect.width;\n    const xPosition = previousClientRect.left - currentClientRect.left;\n    // Scale the indicator width to match the previous indicator width\n    // and translate it on top of the previous indicator\n    const transform = `translate3d(${xPosition}px, 0, 0) scaleX(${widthDelta})`;\n    writeTask(() => {\n      // Remove the transition before positioning on top of the previous indicator\n      currentIndicator.classList.remove('segment-button-indicator-animated');\n      currentIndicator.style.setProperty('transform', transform);\n      // Force a repaint to ensure the transform happens\n      currentIndicator.getBoundingClientRect();\n      // Add the transition to move the indicator into place\n      currentIndicator.classList.add('segment-button-indicator-animated');\n      // Remove the transform to slide the indicator back to the button clicked\n      currentIndicator.style.setProperty('transform', '');\n    });\n    this.value = current.value;\n    this.setCheckedClasses();\n  }\n  setCheckedClasses() {\n    const buttons = this.getButtons();\n    const index = buttons.findIndex((button) => button.value === this.value);\n    const next = index + 1;\n    // Keep track of the currently checked button\n    this.checked = buttons.find((button) => button.value === this.value);\n    for (const button of buttons) {\n      button.classList.remove('segment-button-after-checked');\n    }\n    if (next < buttons.length) {\n      buttons[next].classList.add('segment-button-after-checked');\n    }\n  }\n  setNextIndex(detail, isEnd = false) {\n    const rtl = isRTL(this.el);\n    const activated = this.activated;\n    const buttons = this.getButtons();\n    const index = buttons.findIndex((button) => button.value === this.value);\n    const previous = buttons[index];\n    let current;\n    let nextIndex;\n    if (index === -1) {\n      return;\n    }\n    // Get the element that the touch event started on in case\n    // it was the checked button, then we will move the indicator\n    const rect = previous.getBoundingClientRect();\n    const left = rect.left;\n    const width = rect.width;\n    // Get the element that the gesture is on top of based on the currentX of the\n    // gesture event and the Y coordinate of the starting element, since the gesture\n    // can move up and down off of the segment\n    const currentX = detail.currentX;\n    const previousY = rect.top + rect.height / 2;\n    /**\n     * Segment can be used inside the shadow dom\n     * so doing document.elementFromPoint would never\n     * return a segment button in that instance.\n     * We use getRootNode to which will return the parent\n     * shadow root if used inside a shadow component and\n     * returns document otherwise.\n     */\n    const root = this.el.getRootNode();\n    const nextEl = root.elementFromPoint(currentX, previousY);\n    const decreaseIndex = rtl ? currentX > left + width : currentX < left;\n    const increaseIndex = rtl ? currentX < left : currentX > left + width;\n    // If the indicator is currently activated then we have started the gesture\n    // on top of the checked button so we need to slide the indicator\n    // by checking the button next to it as we move\n    if (activated && !isEnd) {\n      // Decrease index, move left in LTR & right in RTL\n      if (decreaseIndex) {\n        const newIndex = index - 1;\n        if (newIndex >= 0) {\n          nextIndex = newIndex;\n        }\n        // Increase index, moves right in LTR & left in RTL\n      }\n      else if (increaseIndex) {\n        if (activated && !isEnd) {\n          const newIndex = index + 1;\n          if (newIndex < buttons.length) {\n            nextIndex = newIndex;\n          }\n        }\n      }\n      if (nextIndex !== undefined && !buttons[nextIndex].disabled) {\n        current = buttons[nextIndex];\n      }\n    }\n    // If the indicator is not activated then we will just set the indicator\n    // to the element where the gesture ended\n    if (!activated && isEnd) {\n      current = nextEl;\n    }\n    if (current != null) {\n      /**\n       * If current element is ion-segment then that means\n       * user tried to select a disabled ion-segment-button,\n       * and we should not update the ripple.\n       */\n      if (current.tagName === 'ION-SEGMENT') {\n        return false;\n      }\n      if (previous !== current) {\n        this.checkButton(previous, current);\n      }\n    }\n    return true;\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      segment: true,\n    });\n  }\n  onKeyDown(ev) {\n    const rtl = isRTL(this.el);\n    let keyDownSelectsButton = this.selectOnFocus;\n    let current;\n    switch (ev.key) {\n      case 'ArrowRight':\n        ev.preventDefault();\n        current = rtl ? this.getSegmentButton('previous') : this.getSegmentButton('next');\n        break;\n      case 'ArrowLeft':\n        ev.preventDefault();\n        current = rtl ? this.getSegmentButton('next') : this.getSegmentButton('previous');\n        break;\n      case 'Home':\n        ev.preventDefault();\n        current = this.getSegmentButton('first');\n        break;\n      case 'End':\n        ev.preventDefault();\n        current = this.getSegmentButton('last');\n        break;\n      case ' ':\n      case 'Enter':\n        ev.preventDefault();\n        current = document.activeElement;\n        keyDownSelectsButton = true;\n    }\n    if (!current) {\n      return;\n    }\n    if (keyDownSelectsButton) {\n      const previous = this.checked || current;\n      this.checkButton(previous, current);\n    }\n    current.focus();\n  }\n  /* By default, focus is delegated to the selected `ion-segment-button`.\n   * If there is no selected button, focus will instead pass to the first child button.\n   **/\n  ensureFocusable() {\n    var _a;\n    if (this.value !== undefined) {\n      return;\n    }\n    const buttons = this.getButtons();\n    (_a = buttons[0]) === null || _a === void 0 ? void 0 : _a.setAttribute('tabindex', '0');\n  }\n  render() {\n    const mode = getIonMode(this);\n    return (h(Host, { role: \"tablist\", onClick: this.onClick, class: createColorClasses(this.color, {\n        [mode]: true,\n        'in-toolbar': hostContext('ion-toolbar', this.el),\n        'in-toolbar-color': hostContext('ion-toolbar[color]', this.el),\n        'segment-activated': this.activated,\n        'segment-disabled': this.disabled,\n        'segment-scrollable': this.scrollable,\n      }) }, h(\"slot\", null)));\n  }\n  get el() { return this; }\n  static get watchers() { return {\n    \"color\": [\"colorChanged\"],\n    \"swipeGesture\": [\"swipeGestureChanged\"],\n    \"value\": [\"valueChanged\"],\n    \"disabled\": [\"disabledChanged\"]\n  }; }\n  static get style() { return {\n    ios: segmentIosCss,\n    md: segmentMdCss\n  }; }\n}, [33, \"ion-segment\", {\n    \"color\": [513],\n    \"disabled\": [4],\n    \"scrollable\": [4],\n    \"swipeGesture\": [4, \"swipe-gesture\"],\n    \"value\": [1025],\n    \"selectOnFocus\": [4, \"select-on-focus\"],\n    \"activated\": [32]\n  }, [[0, \"keydown\", \"onKeyDown\"]]]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-segment\"];\n  components.forEach(tagName => { switch (tagName) {\n    case \"ion-segment\":\n      if (!customElements.get(tagName)) {\n        customElements.define(tagName, Segment);\n      }\n      break;\n  } });\n}\n\nconst IonSegment = Segment;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonSegment, defineCustomElement };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}