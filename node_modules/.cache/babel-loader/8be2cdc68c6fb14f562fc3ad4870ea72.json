{"ast":null,"code":"import _regeneratorRuntime from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/home/tanishq-singh-2301/hello/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\n/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\n\nexport var deleteDatabase = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(name) {\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return new Promise(function (resolve, reject) {\n              var request = indexedDB.deleteDatabase(name);\n\n              request.onerror = function () {\n                reject(request.error);\n              };\n\n              request.onblocked = function () {\n                reject(new Error('Delete blocked'));\n              };\n\n              request.onsuccess = function () {\n                resolve();\n              };\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function deleteDatabase(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["deleteDatabase","name","Promise","resolve","reject","request","indexedDB","onerror","error","onblocked","Error","onsuccess"],"sources":["/home/tanishq-singh-2301/hello/node_modules/workbox-core/_private/deleteDatabase.js"],"sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,gBAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAMA,cAAc;EAAA,sEAAG,iBAAOC,IAAP;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,OACpB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;cACnC,IAAMC,OAAO,GAAGC,SAAS,CAACN,cAAV,CAAyBC,IAAzB,CAAhB;;cACAI,OAAO,CAACE,OAAR,GAAkB,YAAM;gBACpBH,MAAM,CAACC,OAAO,CAACG,KAAT,CAAN;cACH,CAFD;;cAGAH,OAAO,CAACI,SAAR,GAAoB,YAAM;gBACtBL,MAAM,CAAC,IAAIM,KAAJ,CAAU,gBAAV,CAAD,CAAN;cACH,CAFD;;cAGAL,OAAO,CAACM,SAAR,GAAoB,YAAM;gBACtBR,OAAO;cACV,CAFD;YAGH,CAXK,CADoB;;UAAA;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAH;;EAAA,gBAAdH,cAAc;IAAA;EAAA;AAAA,GAApB"},"metadata":{},"sourceType":"module"}